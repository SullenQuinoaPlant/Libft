find: /tmp/nkrouglo/includes: No such file or directory
find: /tmp/nkrouglo/srcs: No such file or directory
echo "tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strcat.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_toupper.spec.c tests/01_part2_ft_itoa.spec.c tests/01_part2_ft_memalloc.spec.c tests/01_part2_ft_memdel.spec.c tests/01_part2_ft_putchar.spec.c tests/01_part2_ft_putchar_fd.spec.c tests/01_part2_ft_putendl.spec.c tests/01_part2_ft_putendl_fd.spec.c tests/01_part2_ft_putnbr.spec.c tests/01_part2_ft_putnbr_fd.spec.c tests/01_part2_ft_putstr.spec.c tests/01_part2_ft_putstr_fd.spec.c tests/01_part2_ft_strclr.spec.c tests/01_part2_ft_strdel.spec.c tests/01_part2_ft_strequ.spec.c tests/01_part2_ft_striter.spec.c tests/01_part2_ft_striteri.spec.c tests/01_part2_ft_strjoin.spec.c tests/01_part2_ft_strmap.spec.c tests/01_part2_ft_strmapi.spec.c tests/01_part2_ft_strnequ.spec.c tests/01_part2_ft_strnew.spec.c tests/01_part2_ft_strsplit.spec.c tests/01_part2_ft_strsub.spec.c tests/01_part2_ft_strtrim.spec.c tests/02_bonus_ft_lstadd.spec.c tests/02_bonus_ft_lstdel.spec.c tests/02_bonus_ft_lstdelone.spec.c tests/02_bonus_ft_lstiter.spec.c tests/02_bonus_ft_lstmap.spec.c tests/02_bonus_ft_lstnew.spec.c"
tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strcat.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_toupper.spec.c tests/01_part2_ft_itoa.spec.c tests/01_part2_ft_memalloc.spec.c tests/01_part2_ft_memdel.spec.c tests/01_part2_ft_putchar.spec.c tests/01_part2_ft_putchar_fd.spec.c tests/01_part2_ft_putendl.spec.c tests/01_part2_ft_putendl_fd.spec.c tests/01_part2_ft_putnbr.spec.c tests/01_part2_ft_putnbr_fd.spec.c tests/01_part2_ft_putstr.spec.c tests/01_part2_ft_putstr_fd.spec.c tests/01_part2_ft_strclr.spec.c tests/01_part2_ft_strdel.spec.c tests/01_part2_ft_strequ.spec.c tests/01_part2_ft_striter.spec.c tests/01_part2_ft_striteri.spec.c tests/01_part2_ft_strjoin.spec.c tests/01_part2_ft_strmap.spec.c tests/01_part2_ft_strmapi.spec.c tests/01_part2_ft_strnequ.spec.c tests/01_part2_ft_strnew.spec.c tests/01_part2_ft_strsplit.spec.c tests/01_part2_ft_strsub.spec.c tests/01_part2_ft_strtrim.spec.c tests/02_bonus_ft_lstadd.spec.c tests/02_bonus_ft_lstdel.spec.c tests/02_bonus_ft_lstdelone.spec.c tests/02_bonus_ft_lstiter.spec.c tests/02_bonus_ft_lstmap.spec.c tests/02_bonus_ft_lstnew.spec.c
make re -k -C /tmp/nkrouglo 
rm *.o
rm libft.a
rm was_libso is_libso was_liba is_liba
rm: is_libso: No such file or directory
make[2]: [fclean] Error 1 (ignored)
rm tf.exe
rm: tf.exe: No such file or directory
make[2]: [fclean] Error 1 (ignored)
touch was_libso
touch  ft_atoi.c  ft_bzero.c  ft_isalnum.c  ft_isalpha.c  ft_isascii.c  ft_isdigit.c  ft_isprint.c  ft_itoa.c  ft_lstadd.c  ft_lstdel.c  ft_lstdelone.c  ft_lstiter.c  ft_lstmap.c  ft_lstnew.c  ft_memalloc.c  ft_memccpy.c  ft_memchr.c  ft_memcmp.c  ft_memcpy.c  ft_memdel.c  ft_memmove.c  ft_memset.c  ft_putchar.c  ft_putchar_fd.c  ft_putendl.c  ft_putendl_fd.c  ft_putnbr.c  ft_putnbr_fd.c  ft_putstr.c  ft_putstr_fd.c  ft_strcat.c  ft_strchr.c  ft_strclr.c  ft_strcmp.c  ft_strcpy.c  ft_strdel.c  ft_strdup.c  ft_strequ.c  ft_striter.c  ft_striteri.c  ft_strjoin.c  ft_strlcat.c  ft_strlen.c  ft_strmap.c  ft_strmapi.c  ft_strncat.c  ft_strncmp.c  ft_strncpy.c  ft_strnequ.c  ft_strnew.c  ft_strnstr.c  ft_strrchr.c  ft_strsplit.c  ft_strstr.c  ft_strsub.c  ft_strtrim.c  ft_tolower.c  ft_toupper.c
gcc -c -Wall -Wextra -Werror ft_atoi.c
gcc -c -Wall -Wextra -Werror ft_bzero.c
gcc -c -Wall -Wextra -Werror ft_isalnum.c
gcc -c -Wall -Wextra -Werror ft_isalpha.c
gcc -c -Wall -Wextra -Werror ft_isascii.c
gcc -c -Wall -Wextra -Werror ft_isdigit.c
gcc -c -Wall -Wextra -Werror ft_isprint.c
gcc -c -Wall -Wextra -Werror ft_itoa.c
gcc -c -Wall -Wextra -Werror ft_lstadd.c
gcc -c -Wall -Wextra -Werror ft_lstdel.c
gcc -c -Wall -Wextra -Werror ft_lstdelone.c
gcc -c -Wall -Wextra -Werror ft_lstiter.c
gcc -c -Wall -Wextra -Werror ft_lstmap.c
gcc -c -Wall -Wextra -Werror ft_lstnew.c
gcc -c -Wall -Wextra -Werror ft_memalloc.c
gcc -c -Wall -Wextra -Werror ft_memccpy.c
gcc -c -Wall -Wextra -Werror ft_memchr.c
gcc -c -Wall -Wextra -Werror ft_memcmp.c
gcc -c -Wall -Wextra -Werror ft_memcpy.c
gcc -c -Wall -Wextra -Werror ft_memdel.c
gcc -c -Wall -Wextra -Werror ft_memmove.c
gcc -c -Wall -Wextra -Werror ft_memset.c
gcc -c -Wall -Wextra -Werror ft_putchar.c
gcc -c -Wall -Wextra -Werror ft_putchar_fd.c
gcc -c -Wall -Wextra -Werror ft_putendl.c
gcc -c -Wall -Wextra -Werror ft_putendl_fd.c
gcc -c -Wall -Wextra -Werror ft_putnbr.c
gcc -c -Wall -Wextra -Werror ft_putnbr_fd.c
gcc -c -Wall -Wextra -Werror ft_putstr.c
gcc -c -Wall -Wextra -Werror ft_putstr_fd.c
gcc -c -Wall -Wextra -Werror ft_strcat.c
gcc -c -Wall -Wextra -Werror ft_strchr.c
gcc -c -Wall -Wextra -Werror ft_strclr.c
gcc -c -Wall -Wextra -Werror ft_strcmp.c
gcc -c -Wall -Wextra -Werror ft_strcpy.c
gcc -c -Wall -Wextra -Werror ft_strdel.c
gcc -c -Wall -Wextra -Werror ft_strdup.c
gcc -c -Wall -Wextra -Werror ft_strequ.c
gcc -c -Wall -Wextra -Werror ft_striter.c
gcc -c -Wall -Wextra -Werror ft_striteri.c
gcc -c -Wall -Wextra -Werror ft_strjoin.c
gcc -c -Wall -Wextra -Werror ft_strlcat.c
gcc -c -Wall -Wextra -Werror ft_strlen.c
gcc -c -Wall -Wextra -Werror ft_strmap.c
gcc -c -Wall -Wextra -Werror ft_strmapi.c
gcc -c -Wall -Wextra -Werror ft_strncat.c
gcc -c -Wall -Wextra -Werror ft_strncmp.c
gcc -c -Wall -Wextra -Werror ft_strncpy.c
gcc -c -Wall -Wextra -Werror ft_strnequ.c
gcc -c -Wall -Wextra -Werror ft_strnew.c
gcc -c -Wall -Wextra -Werror ft_strnstr.c
gcc -c -Wall -Wextra -Werror ft_strrchr.c
gcc -c -Wall -Wextra -Werror ft_strsplit.c
gcc -c -Wall -Wextra -Werror ft_strstr.c
gcc -c -Wall -Wextra -Werror ft_strsub.c
gcc -c -Wall -Wextra -Werror ft_strtrim.c
gcc -c -Wall -Wextra -Werror ft_tolower.c
gcc -c -Wall -Wextra -Werror ft_toupper.c
ar rcs libft.a ft_atoi.o  ft_bzero.o  ft_isalnum.o  ft_isalpha.o  ft_isascii.o ft_isdigit.o ft_isprint.o ft_itoa.o ft_lstadd.o ft_lstdel.o ft_lstdelone.o ft_lstiter.o ft_lstmap.o ft_lstnew.o ft_memalloc.o ft_memccpy.o ft_memchr.o ft_memcmp.o ft_memcpy.o ft_memdel.o ft_memmove.o ft_memset.o ft_putchar.o ft_putchar_fd.o ft_putendl.o ft_putendl_fd.o ft_putnbr.o ft_putnbr_fd.o ft_putstr.o ft_putstr_fd.o ft_strcat.o ft_strchr.o ft_strclr.o ft_strcmp.o ft_strcpy.o ft_strdel.o ft_strdup.o ft_strequ.o ft_striter.o ft_striteri.o ft_strjoin.o ft_strlcat.o ft_strlen.o ft_strmap.o ft_strmapi.o ft_strncat.o ft_strncmp.o ft_strncpy.o ft_strnequ.o ft_strnew.o ft_strnstr.o ft_strrchr.o ft_strsplit.o ft_strstr.o ft_strsub.o ft_strtrim.o ft_tolower.o ft_toupper.o
touch was_liba is_liba
make -k -C ../testframework/v3/
rm -f *.o
cc -Wall -Werror -Wextra -ggdb -I includes -c srcs/**/*.c
ar rc libmt_framework.a *.o
cc -g -I . -I ../testframework/v3//includes -I /tmp/nkrouglo -I /tmp/nkrouglo/includes -I /tmp/nkrouglo/includes/builtin -I /tmp/nkrouglo/libs/libtowel/includes -I /tmp/nkrouglo/libft/includes -I /tmp/nkrouglo/srcs/libft/includes -D__MOULITEST__ -DPROTOTYPES="MT_ADD_PROTO(00_part1_ft_atoi); MT_ADD_PROTO(00_part1_ft_bzero); MT_ADD_PROTO(00_part1_ft_isalnum); MT_ADD_PROTO(00_part1_ft_isalpha); MT_ADD_PROTO(00_part1_ft_isascii); MT_ADD_PROTO(00_part1_ft_isdigit); MT_ADD_PROTO(00_part1_ft_isprint); MT_ADD_PROTO(00_part1_ft_memccpy); MT_ADD_PROTO(00_part1_ft_memchr); MT_ADD_PROTO(00_part1_ft_memcmp); MT_ADD_PROTO(00_part1_ft_memcpy); MT_ADD_PROTO(00_part1_ft_memmove); MT_ADD_PROTO(00_part1_ft_memset); MT_ADD_PROTO(00_part1_ft_strcat); MT_ADD_PROTO(00_part1_ft_strchr); MT_ADD_PROTO(00_part1_ft_strcmp); MT_ADD_PROTO(00_part1_ft_strcpy); MT_ADD_PROTO(00_part1_ft_strdup); MT_ADD_PROTO(00_part1_ft_strlcat); MT_ADD_PROTO(00_part1_ft_strlen); MT_ADD_PROTO(00_part1_ft_strncat); MT_ADD_PROTO(00_part1_ft_strncmp); MT_ADD_PROTO(00_part1_ft_strncpy); MT_ADD_PROTO(00_part1_ft_strnstr); MT_ADD_PROTO(00_part1_ft_strrchr); MT_ADD_PROTO(00_part1_ft_strstr); MT_ADD_PROTO(00_part1_ft_tolower); MT_ADD_PROTO(00_part1_ft_toupper); MT_ADD_PROTO(01_part2_ft_itoa); MT_ADD_PROTO(01_part2_ft_memalloc); MT_ADD_PROTO(01_part2_ft_memdel); MT_ADD_PROTO(01_part2_ft_putchar); MT_ADD_PROTO(01_part2_ft_putchar_fd); MT_ADD_PROTO(01_part2_ft_putendl); MT_ADD_PROTO(01_part2_ft_putendl_fd); MT_ADD_PROTO(01_part2_ft_putnbr); MT_ADD_PROTO(01_part2_ft_putnbr_fd); MT_ADD_PROTO(01_part2_ft_putstr); MT_ADD_PROTO(01_part2_ft_putstr_fd); MT_ADD_PROTO(01_part2_ft_strclr); MT_ADD_PROTO(01_part2_ft_strdel); MT_ADD_PROTO(01_part2_ft_strequ); MT_ADD_PROTO(01_part2_ft_striter); MT_ADD_PROTO(01_part2_ft_striteri); MT_ADD_PROTO(01_part2_ft_strjoin); MT_ADD_PROTO(01_part2_ft_strmap); MT_ADD_PROTO(01_part2_ft_strmapi); MT_ADD_PROTO(01_part2_ft_strnequ); MT_ADD_PROTO(01_part2_ft_strnew); MT_ADD_PROTO(01_part2_ft_strsplit); MT_ADD_PROTO(01_part2_ft_strsub); MT_ADD_PROTO(01_part2_ft_strtrim); MT_ADD_PROTO(02_bonus_ft_lstadd); MT_ADD_PROTO(02_bonus_ft_lstdel); MT_ADD_PROTO(02_bonus_ft_lstdelone); MT_ADD_PROTO(02_bonus_ft_lstiter); MT_ADD_PROTO(02_bonus_ft_lstmap); MT_ADD_PROTO(02_bonus_ft_lstnew); " -DADD_TESTS="MT_ADD_SUITE(mt, 00_part1_ft_atoi, suite_00_part1_ft_atoi); MT_ADD_SUITE(mt, 00_part1_ft_bzero, suite_00_part1_ft_bzero); MT_ADD_SUITE(mt, 00_part1_ft_isalnum, suite_00_part1_ft_isalnum); MT_ADD_SUITE(mt, 00_part1_ft_isalpha, suite_00_part1_ft_isalpha); MT_ADD_SUITE(mt, 00_part1_ft_isascii, suite_00_part1_ft_isascii); MT_ADD_SUITE(mt, 00_part1_ft_isdigit, suite_00_part1_ft_isdigit); MT_ADD_SUITE(mt, 00_part1_ft_isprint, suite_00_part1_ft_isprint); MT_ADD_SUITE(mt, 00_part1_ft_memccpy, suite_00_part1_ft_memccpy); MT_ADD_SUITE(mt, 00_part1_ft_memchr, suite_00_part1_ft_memchr); MT_ADD_SUITE(mt, 00_part1_ft_memcmp, suite_00_part1_ft_memcmp); MT_ADD_SUITE(mt, 00_part1_ft_memcpy, suite_00_part1_ft_memcpy); MT_ADD_SUITE(mt, 00_part1_ft_memmove, suite_00_part1_ft_memmove); MT_ADD_SUITE(mt, 00_part1_ft_memset, suite_00_part1_ft_memset); MT_ADD_SUITE(mt, 00_part1_ft_strcat, suite_00_part1_ft_strcat); MT_ADD_SUITE(mt, 00_part1_ft_strchr, suite_00_part1_ft_strchr); MT_ADD_SUITE(mt, 00_part1_ft_strcmp, suite_00_part1_ft_strcmp); MT_ADD_SUITE(mt, 00_part1_ft_strcpy, suite_00_part1_ft_strcpy); MT_ADD_SUITE(mt, 00_part1_ft_strdup, suite_00_part1_ft_strdup); MT_ADD_SUITE(mt, 00_part1_ft_strlcat, suite_00_part1_ft_strlcat); MT_ADD_SUITE(mt, 00_part1_ft_strlen, suite_00_part1_ft_strlen); MT_ADD_SUITE(mt, 00_part1_ft_strncat, suite_00_part1_ft_strncat); MT_ADD_SUITE(mt, 00_part1_ft_strncmp, suite_00_part1_ft_strncmp); MT_ADD_SUITE(mt, 00_part1_ft_strncpy, suite_00_part1_ft_strncpy); MT_ADD_SUITE(mt, 00_part1_ft_strnstr, suite_00_part1_ft_strnstr); MT_ADD_SUITE(mt, 00_part1_ft_strrchr, suite_00_part1_ft_strrchr); MT_ADD_SUITE(mt, 00_part1_ft_strstr, suite_00_part1_ft_strstr); MT_ADD_SUITE(mt, 00_part1_ft_tolower, suite_00_part1_ft_tolower); MT_ADD_SUITE(mt, 00_part1_ft_toupper, suite_00_part1_ft_toupper); MT_ADD_SUITE(mt, 01_part2_ft_itoa, suite_01_part2_ft_itoa); MT_ADD_SUITE(mt, 01_part2_ft_memalloc, suite_01_part2_ft_memalloc); MT_ADD_SUITE(mt, 01_part2_ft_memdel, suite_01_part2_ft_memdel); MT_ADD_SUITE(mt, 01_part2_ft_putchar, suite_01_part2_ft_putchar); MT_ADD_SUITE(mt, 01_part2_ft_putchar_fd, suite_01_part2_ft_putchar_fd); MT_ADD_SUITE(mt, 01_part2_ft_putendl, suite_01_part2_ft_putendl); MT_ADD_SUITE(mt, 01_part2_ft_putendl_fd, suite_01_part2_ft_putendl_fd); MT_ADD_SUITE(mt, 01_part2_ft_putnbr, suite_01_part2_ft_putnbr); MT_ADD_SUITE(mt, 01_part2_ft_putnbr_fd, suite_01_part2_ft_putnbr_fd); MT_ADD_SUITE(mt, 01_part2_ft_putstr, suite_01_part2_ft_putstr); MT_ADD_SUITE(mt, 01_part2_ft_putstr_fd, suite_01_part2_ft_putstr_fd); MT_ADD_SUITE(mt, 01_part2_ft_strclr, suite_01_part2_ft_strclr); MT_ADD_SUITE(mt, 01_part2_ft_strdel, suite_01_part2_ft_strdel); MT_ADD_SUITE(mt, 01_part2_ft_strequ, suite_01_part2_ft_strequ); MT_ADD_SUITE(mt, 01_part2_ft_striter, suite_01_part2_ft_striter); MT_ADD_SUITE(mt, 01_part2_ft_striteri, suite_01_part2_ft_striteri); MT_ADD_SUITE(mt, 01_part2_ft_strjoin, suite_01_part2_ft_strjoin); MT_ADD_SUITE(mt, 01_part2_ft_strmap, suite_01_part2_ft_strmap); MT_ADD_SUITE(mt, 01_part2_ft_strmapi, suite_01_part2_ft_strmapi); MT_ADD_SUITE(mt, 01_part2_ft_strnequ, suite_01_part2_ft_strnequ); MT_ADD_SUITE(mt, 01_part2_ft_strnew, suite_01_part2_ft_strnew); MT_ADD_SUITE(mt, 01_part2_ft_strsplit, suite_01_part2_ft_strsplit); MT_ADD_SUITE(mt, 01_part2_ft_strsub, suite_01_part2_ft_strsub); MT_ADD_SUITE(mt, 01_part2_ft_strtrim, suite_01_part2_ft_strtrim); MT_ADD_SUITE(mt, 02_bonus_ft_lstadd, suite_02_bonus_ft_lstadd); MT_ADD_SUITE(mt, 02_bonus_ft_lstdel, suite_02_bonus_ft_lstdel); MT_ADD_SUITE(mt, 02_bonus_ft_lstdelone, suite_02_bonus_ft_lstdelone); MT_ADD_SUITE(mt, 02_bonus_ft_lstiter, suite_02_bonus_ft_lstiter); MT_ADD_SUITE(mt, 02_bonus_ft_lstmap, suite_02_bonus_ft_lstmap); MT_ADD_SUITE(mt, 02_bonus_ft_lstnew, suite_02_bonus_ft_lstnew); " -DRENDU_PATH="\"/tmp/nkrouglo\"" tests/00_part1_ft_atoi.spec.c tests/00_part1_ft_bzero.spec.c tests/00_part1_ft_isalnum.spec.c tests/00_part1_ft_isalpha.spec.c tests/00_part1_ft_isascii.spec.c tests/00_part1_ft_isdigit.spec.c tests/00_part1_ft_isprint.spec.c tests/00_part1_ft_memccpy.spec.c tests/00_part1_ft_memchr.spec.c tests/00_part1_ft_memcmp.spec.c tests/00_part1_ft_memcpy.spec.c tests/00_part1_ft_memmove.spec.c tests/00_part1_ft_memset.spec.c tests/00_part1_ft_strcat.spec.c tests/00_part1_ft_strchr.spec.c tests/00_part1_ft_strcmp.spec.c tests/00_part1_ft_strcpy.spec.c tests/00_part1_ft_strdup.spec.c tests/00_part1_ft_strlcat.spec.c tests/00_part1_ft_strlen.spec.c tests/00_part1_ft_strncat.spec.c tests/00_part1_ft_strncmp.spec.c tests/00_part1_ft_strncpy.spec.c tests/00_part1_ft_strnstr.spec.c tests/00_part1_ft_strrchr.spec.c tests/00_part1_ft_strstr.spec.c tests/00_part1_ft_tolower.spec.c tests/00_part1_ft_toupper.spec.c tests/01_part2_ft_itoa.spec.c tests/01_part2_ft_memalloc.spec.c tests/01_part2_ft_memdel.spec.c tests/01_part2_ft_putchar.spec.c tests/01_part2_ft_putchar_fd.spec.c tests/01_part2_ft_putendl.spec.c tests/01_part2_ft_putendl_fd.spec.c tests/01_part2_ft_putnbr.spec.c tests/01_part2_ft_putnbr_fd.spec.c tests/01_part2_ft_putstr.spec.c tests/01_part2_ft_putstr_fd.spec.c tests/01_part2_ft_strclr.spec.c tests/01_part2_ft_strdel.spec.c tests/01_part2_ft_strequ.spec.c tests/01_part2_ft_striter.spec.c tests/01_part2_ft_striteri.spec.c tests/01_part2_ft_strjoin.spec.c tests/01_part2_ft_strmap.spec.c tests/01_part2_ft_strmapi.spec.c tests/01_part2_ft_strnequ.spec.c tests/01_part2_ft_strnew.spec.c tests/01_part2_ft_strsplit.spec.c tests/01_part2_ft_strsub.spec.c tests/01_part2_ft_strtrim.spec.c tests/02_bonus_ft_lstadd.spec.c tests/02_bonus_ft_lstdel.spec.c tests/02_bonus_ft_lstdelone.spec.c tests/02_bonus_ft_lstiter.spec.c tests/02_bonus_ft_lstmap.spec.c tests/02_bonus_ft_lstnew.spec.c main.c utils.c   -o libft_tests -L../testframework/v3/ -lmt_framework -lft -L /tmp/nkrouglo -I /tmp/nkrouglo -I /tmp/nkrouglo/includes
tests/01_part2_ft_strmapi.spec.c:9:8: warning: implicit declaration of function 'ft_strmapi' is invalid in C99 [-Wimplicit-function-declaration]
        dst = ft_strmapi(src, mapi_test);
              ^
tests/01_part2_ft_strmapi.spec.c:9:6: warning: incompatible integer to pointer conversion assigning to 'char *' from 'int' [-Wint-conversion]
        dst = ft_strmapi(src, mapi_test);
            ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
tests/01_part2_ft_strtrim.spec.c:5:19: warning: implicit declaration of function 'ft_strtrim' is invalid in C99 [-Wimplicit-function-declaration]
        mt_assert(strcmp(ft_strtrim("	
  	AAA 	 BBB	
  	"), "AAA 	 BBB") == 0);
                         ^
tests/01_part2_ft_strtrim.spec.c:5:19: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
        mt_assert(strcmp(ft_strtrim("	
  	AAA 	 BBB	
  	"), "AAA 	 BBB") == 0);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../testframework/v3//includes/fw.h:9:41: note: expanded from macro 'mt_assert'
# define mt_assert(cond) mt_assert_base(cond, NULL, 0)
                                        ^~~~
../testframework/v3//includes/fw.h:7:107: note: expanded from macro 'mt_assert_base'
# define mt_assert_base(cond, msg, signum) test_assert_prep(test, #cond, msg, signum); test_assert(test, (cond))
                                                                                                          ^~~~
/usr/include/string.h:77:25: note: passing argument to parameter '__s1' here
int      strcmp(const char *__s1, const char *__s2);
                            ^
tests/01_part2_ft_strtrim.spec.c:10:19: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
        mt_assert(strcmp(ft_strtrim("		
		   "), "") == 0);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../testframework/v3//includes/fw.h:9:41: note: expanded from macro 'mt_assert'
# define mt_assert(cond) mt_assert_base(cond, NULL, 0)
                                        ^~~~
../testframework/v3//includes/fw.h:7:107: note: expanded from macro 'mt_assert_base'
# define mt_assert_base(cond, msg, signum) test_assert_prep(test, #cond, msg, signum); test_assert(test, (cond))
                                                                                                          ^~~~
/usr/include/string.h:77:25: note: passing argument to parameter '__s1' here
int      strcmp(const char *__s1, const char *__s2);
                            ^
tests/01_part2_ft_strtrim.spec.c:15:19: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
        mt_assert(strcmp(ft_strtrim(""), "") == 0);
                         ^~~~~~~~~~~~~~
../testframework/v3//includes/fw.h:9:41: note: expanded from macro 'mt_assert'
# define mt_assert(cond) mt_assert_base(cond, NULL, 0)
                                        ^~~~
../testframework/v3//includes/fw.h:7:107: note: expanded from macro 'mt_assert_base'
# define mt_assert_base(cond, msg, signum) test_assert_prep(test, #cond, msg, signum); test_assert(test, (cond))
                                                                                                          ^~~~
/usr/include/string.h:77:25: note: passing argument to parameter '__s1' here
int      strcmp(const char *__s1, const char *__s2);
                            ^
tests/01_part2_ft_strtrim.spec.c:20:19: warning: incompatible integer to pointer conversion passing 'int' to parameter of type 'const char *' [-Wint-conversion]
        mt_assert(strcmp(ft_strtrim("abc"), "abc") == 0);
                         ^~~~~~~~~~~~~~~~~
../testframework/v3//includes/fw.h:9:41: note: expanded from macro 'mt_assert'
# define mt_assert(cond) mt_assert_base(cond, NULL, 0)
                                        ^~~~
../testframework/v3//includes/fw.h:7:107: note: expanded from macro 'mt_assert_base'
# define mt_assert_base(cond, msg, signum) test_assert_prep(test, #cond, msg, signum); test_assert(test, (cond))
                                                                                                          ^~~~
/usr/include/string.h:77:25: note: passing argument to parameter '__s1' here
int      strcmp(const char *__s1, const char *__s2);
                            ^
5 warnings generated.
/Users/nmauvari/42FileChecker/moulitest_42projects/libft_tests/libft_tests

--

>>>> Tests for libft
Source: github.com/yyang42/moulitest
Legend: (.) Ok / (F) Fail / (S) Segfault / (B) Bus error / (T) Timeout / (A) Abort

Notes: Errors should never pass silently! (That's why we don't handle NULL cases.)

[ -------STARTING ALL UNIT TESTS------- ]
>>>> 00_part1_ft_atoi.spec.c ----- [Ok !] ................................
>>>> 00_part1_ft_bzero.spec.c ---- [Ok !] ...
>>>> 00_part1_ft_isalnum.spec.c -- [Ok !] ...................
>>>> 00_part1_ft_isalpha.spec.c -- [Ok !] ...................
>>>> 00_part1_ft_isascii.spec.c -- [Ok !] ....................
>>>> 00_part1_ft_isdigit.spec.c -- [Ok !] ...................
>>>> 00_part1_ft_isprint.spec.c -- [Ok !] ...................
>>>> 00_part1_ft_memccpy.spec.c -- [Ok !] ..
>>>> 00_part1_ft_memchr.spec.c --- [Ok !] .
>>>> 00_part1_ft_memcmp.spec.c --- [FAIL] ....F. [FAIL] unittest5 -> ft_memcmp("aww", "bpp", 0) == 0
>>>> 00_part1_ft_memcpy.spec.c --- [Ok !] .
>>>> 00_part1_ft_memmove.spec.c -- [Ok !] ..
>>>> 00_part1_ft_memset.spec.c --- [Ok !] ...
>>>> 00_part1_ft_strcat.spec.c --- [Ok !] .
>>>> 00_part1_ft_strchr.spec.c --- [Ok !] ....
>>>> 00_part1_ft_strcmp.spec.c --- [Ok !] .....
>>>> 00_part1_ft_strcpy.spec.c --- [Ok !] ..
>>>> 00_part1_ft_strdup.spec.c --- [Ok !] ...
>>>> 00_part1_ft_strlcat.spec.c -- [Ok !] .......
>>>> 00_part1_ft_strlen.spec.c --- [Ok !] ....
>>>> 00_part1_ft_strncat.spec.c -- [Ok !] ..
>>>> 00_part1_ft_strncmp.spec.c -- [FAIL] ....F [FAIL] unittest5 -> ft_strncmp("q", "a", 0) == strncmp("q", "a", 0)
>>>> 00_part1_ft_strncpy.spec.c -- [Ok !] ..
>>>> 00_part1_ft_strnstr.spec.c -- [Ok !] ....
>>>> 00_part1_ft_strrchr.spec.c -- [Ok !] ....
>>>> 00_part1_ft_strstr.spec.c --- [Ok !] ..........
>>>> 00_part1_ft_tolower.spec.c -- [Ok !] ...................
>>>> 00_part1_ft_toupper.spec.c -- [Ok !] ...................
>>>> 01_part2_ft_itoa.spec.c ----- [Ok !] ....
>>>> 01_part2_ft_memalloc.spec.c - [Ok !] ..
>>>> 01_part2_ft_memdel.spec.c --- [Ok !] .
>>>> 01_part2_ft_putchar.spec.c -- [Ok !] .
>>>> 01_part2_ft_putchar_fd.spec.c [Ok !] .
>>>> 01_part2_ft_putendl.spec.c -- [Ok !] .
>>>> 01_part2_ft_putendl_fd.spec.c [Ok !] .
>>>> 01_part2_ft_putnbr.spec.c --- [Ok !] .
>>>> 01_part2_ft_putnbr_fd.spec.c  [Ok !] .
>>>> 01_part2_ft_putstr.spec.c --- [Ok !] .
>>>> 01_part2_ft_putstr_fd.spec.c  [Ok !] .
>>>> 01_part2_ft_strclr.spec.c --- [Ok !] .
>>>> 01_part2_ft_strdel.spec.c --- [Ok !] .
>>>> 01_part2_ft_strequ.spec.c --- [Ok !] ...
>>>> 01_part2_ft_striter.spec.c -- [Ok !] .
>>>> 01_part2_ft_striteri.spec.c - [Ok !] .
>>>> 01_part2_ft_strjoin.spec.c -- [Ok !] ..
>>>> 01_part2_ft_strmap.spec.c --- [Ok !] .
>>>> 01_part2_ft_strmapi.spec.c -- [FAIL] S [SEGV] test1 -> strcmp(dst, "edcba") == 0
>>>> 01_part2_ft_strnequ.spec.c -- [Ok !] ....
>>>> 01_part2_ft_strnew.spec.c --- [Ok !] ...
>>>> 01_part2_ft_strsplit.spec.c - [Ok !] ......
>>>> 01_part2_ft_strsub.spec.c --- [Ok !] ...
>>>> 01_part2_ft_strtrim.spec.c -- [FAIL] SSSS [SEGV] test1 -> strcmp(ft_strtrim("	
  	AAA 	 BBB	
  	"), "AAA 	 BBB") == 0
>>>> 02_bonus_ft_lstadd.spec.c --- [Ok !] .
>>>> 02_bonus_ft_lstdel.spec.c --- [Ok !] .
>>>> 02_bonus_ft_lstdelone.spec.c  [Ok !] .
>>>> 02_bonus_ft_lstiter.spec.c -- [Ok !] .
>>>> 02_bonus_ft_lstmap.spec.c --- [Ok !] .
>>>> 02_bonus_ft_lstnew.spec.c --- [Ok !] .
[ ----------END OF UNIT TESTS---------- ]

>>>> Result: 54/58 test suites passed. 282/289 tests passed (dots).
